name: CO

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  check-skip:
    runs-on: ubuntu-latest
    outputs:
      should-skip: ${{ steps.check-labels.outputs.should-skip }}
    steps:
      - id: check-labels
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const labels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const docLabel = labels.data.find(label => label.name === 'type: doc');
            if (docLabel) {
              console.log('PR has type: doc label, skipping CO');
              return core.setOutput('should-skip', 'true');
            }
            
            console.log('PR does not have type: doc label, continuing with CO');
            return core.setOutput('should-skip', 'false');

  coverage:
    needs: check-skip
    if: ${{ github.event_name != 'pull_request' || needs.check-skip.outputs.should-skip != 'true' }}
    name: "Generate coverage On ${{ matrix.os }} - jdk${{ matrix.java-version }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        java-version: [11]
    env:
      OS: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'zulu'
      - name: Install Xvfb
        run: sudo apt-get update && sudo apt-get install -y xvfb
      - name: Start Xvfb
        run: Xvfb :99 -screen 0 1024x768x24 &
      - name: Generate coverage report
        run: |
          ./gradlew check --stacktrace
          ./gradlew codeCoverageReport
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: build/reports/jacoco/report.xml
          flags: unittests
          env_vars: OS
          name: codecov-umbrella
          fail_ci_if_error: true
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true